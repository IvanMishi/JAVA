public class CycleType {
    public static void main(String[] args) {
   
       
        //Значение типа boolean возвращают операции сравнения, логические операции и их сочетания.
        //true (истина, «да», логическая единица "1")
        //false (ложь, «нет», логический ноль "0")
        boolean bool1 = 5 > 2;//true
        boolean bool2 = 5 > 7;//false
        boolean bool3 = 5 >= 4;//true не строгое сравнивание(больше или равно)
        boolean bool4 = 5 == 5;//true равеенство
        boolean bool5 = 5 != 3;//true неравенство
        //вывести значения в терминал, каждое с новой строки
        System.out.println("\n" 
                        + bool1 + "(5>2)" + "\n"
                        + bool2 + "(5>7)" + "\n"
                        + bool3 + "(5>=4)" + "\n"
                        + bool4 + "(5==5)" + "\n"
                        + bool5 + "(5!=3)" + "\n");
                        
        //Цикл while
        //В цикле while необходим какой-то логический оператор, это будет условие до каких пор будет выполнятся этот цикл
        int ValueWhile = 0; //Примитив имеет числовое значение = "0"
          boolean ValBool = ValueWhile > 5;  // Значение 0 > 5 = true
            //while(ValueWhile < 5){   //Бесконечный цикл, т.к значение в условиях всегда (0<5) true в терминал будет выводится While пока работает программа
            //while(ValueWhile < 5) { // Аргуметы - выполнить пока 0 < 5
            //ValueWhile = ValueWhile + 1; //Каждый раз когда цикл проходит к переменной ValueCycleWhile добавит значение 1 и остановит выполнение кода при условии 5 == 5
            System.out.println("Cycle While = " + " " + " it is true let's continue");
        }
        
        //Цикл for.
        //Оператор for (блок условий) {тело цикла выполняется если условие верно}
        for (i = 0; i <= 10; i++){
            // i счетчик - та переменная которая будет каким-то образом изменятся в каждой итерации этого цикла, для нее задаем стартовую позицию
            // Условия - до тех пор пока i <= 10 цикл будет выполнятся (цикл проверки)
            // Инкрементировать (увеличивать) значение переменной = действие на каждую итерацию цикла операцией  пост-инкремента( i++(0+1))
            System.out.println("Number: " + i);
        }
    }
}
